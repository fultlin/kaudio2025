# Generated by Django 5.0.6 on 2025-04-27 12:26

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, null=True, verbose_name='Биография')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('img_cover_url', models.URLField(blank=True, null=True, verbose_name='Ссылка на обложку')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Верифицирован')),
                ('monthly_listeners', models.PositiveIntegerField(default=0, verbose_name='Ежемесячных слушателей')),
            ],
            options={
                'verbose_name': 'Исполнитель',
                'verbose_name_plural': 'Исполнители',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Название')),
                ('img_url', models.URLField(blank=True, null=True, verbose_name='Ссылка на изображение')),
            ],
            options={
                'verbose_name': 'Жанр',
                'verbose_name_plural': 'Жанры',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Subscribe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('free', 'Бесплатная'), ('premium', 'Премиум'), ('family', 'Семейная')], max_length=20, verbose_name='Тип подписки')),
                ('permissions', models.TextField(verbose_name='Разрешения')),
            ],
            options={
                'verbose_name': 'Подписка',
                'verbose_name_plural': 'Подписки',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('img_profile_url', models.URLField(blank=True, null=True, verbose_name='Ссылка на изображение профиля')),
                ('role', models.CharField(choices=[('admin', 'Администратор'), ('user', 'Пользователь'), ('moderator', 'Модератор')], default='user', max_length=10, verbose_name='Роль')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'ordering': ['username'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название')),
                ('release_date', models.DateField(verbose_name='Дата выпуска')),
                ('img_url', models.URLField(blank=True, null=True, verbose_name='Ссылка на обложку')),
                ('total_tracks', models.PositiveIntegerField(default=0, verbose_name='Всего треков')),
                ('total_duration', models.PositiveIntegerField(default=0, verbose_name='Общая продолжительность (сек)')),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='albums', to='kaudio.artist', verbose_name='Исполнитель')),
            ],
            options={
                'verbose_name': 'Альбом',
                'verbose_name_plural': 'Альбомы',
                'ordering': ['-release_date'],
            },
        ),
        migrations.CreateModel(
            name='AlbumGenre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('album', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kaudio.album', verbose_name='Альбом')),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kaudio.genre', verbose_name='Жанр')),
            ],
            options={
                'verbose_name': 'Жанр альбома',
                'verbose_name_plural': 'Жанры альбомов',
                'unique_together': {('album', 'genre')},
            },
        ),
        migrations.AddField(
            model_name='album',
            name='genres',
            field=models.ManyToManyField(related_name='albums', through='kaudio.AlbumGenre', to='kaudio.genre', verbose_name='Жанры'),
        ),
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название')),
                ('img_url', models.URLField(blank=True, null=True, verbose_name='Ссылка на обложку')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('is_public', models.BooleanField(default=True, verbose_name='Публичный')),
                ('total_tracks', models.PositiveIntegerField(default=0, verbose_name='Всего треков')),
                ('total_duration', models.PositiveIntegerField(default=0, verbose_name='Общая продолжительность (сек)')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='playlists', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Плейлист',
                'verbose_name_plural': 'Плейлисты',
                'ordering': ['-creation_date'],
            },
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название')),
                ('track_number', models.PositiveIntegerField(verbose_name='Номер трека')),
                ('release_date', models.DateField(verbose_name='Дата выпуска')),
                ('img_url', models.URLField(blank=True, null=True, verbose_name='Ссылка на обложку')),
                ('duration', models.PositiveIntegerField(verbose_name='Продолжительность (сек)')),
                ('play_count', models.PositiveIntegerField(default=0, verbose_name='Количество воспроизведений')),
                ('likes_count', models.PositiveIntegerField(default=0, verbose_name='Количество лайков')),
                ('is_explicit', models.BooleanField(default=False, verbose_name='Содержит ненормативную лексику')),
                ('lyrics', models.TextField(blank=True, null=True, verbose_name='Текст песни')),
                ('album', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tracks', to='kaudio.album', verbose_name='Альбом')),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tracks', to='kaudio.artist', verbose_name='Исполнитель')),
            ],
            options={
                'verbose_name': 'Трек',
                'verbose_name_plural': 'Треки',
                'ordering': ['album', 'track_number'],
            },
        ),
        migrations.CreateModel(
            name='PlaylistTrack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveIntegerField(verbose_name='Позиция')),
                ('added_at', models.DateTimeField(auto_now_add=True, verbose_name='Добавлен')),
                ('playlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kaudio.playlist', verbose_name='Плейлист')),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kaudio.track', verbose_name='Трек')),
            ],
            options={
                'verbose_name': 'Трек в плейлисте',
                'verbose_name_plural': 'Треки в плейлистах',
                'ordering': ['position'],
                'unique_together': {('playlist', 'track')},
            },
        ),
        migrations.AddField(
            model_name='playlist',
            name='tracks',
            field=models.ManyToManyField(related_name='playlists', through='kaudio.PlaylistTrack', to='kaudio.track', verbose_name='Треки'),
        ),
        migrations.CreateModel(
            name='TrackGenre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kaudio.genre', verbose_name='Жанр')),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kaudio.track', verbose_name='Трек')),
            ],
            options={
                'verbose_name': 'Жанр трека',
                'verbose_name_plural': 'Жанры треков',
                'unique_together': {('track', 'genre')},
            },
        ),
        migrations.AddField(
            model_name='track',
            name='genres',
            field=models.ManyToManyField(related_name='tracks', through='kaudio.TrackGenre', to='kaudio.genre', verbose_name='Жанры'),
        ),
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('play', 'Воспроизведение'), ('like', 'Лайк'), ('add_to_playlist', 'Добавление в плейлист'), ('follow_artist', 'Подписка на исполнителя')], max_length=20, verbose_name='Тип активности')),
                ('duration', models.PositiveIntegerField(blank=True, null=True, verbose_name='Продолжительность (сек)')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Время')),
                ('artist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_activities', to='kaudio.artist', verbose_name='Исполнитель')),
                ('playlist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_activities', to='kaudio.playlist', verbose_name='Плейлист')),
                ('track', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_activities', to='kaudio.track', verbose_name='Трек')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Активность пользователя',
                'verbose_name_plural': 'Активности пользователей',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='UserAlbum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveIntegerField(verbose_name='Позиция')),
                ('added_at', models.DateTimeField(auto_now_add=True, verbose_name='Добавлен')),
                ('album', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_albums', to='kaudio.album', verbose_name='Альбом')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_albums', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Альбом пользователя',
                'verbose_name_plural': 'Альбомы пользователей',
                'ordering': ['position'],
                'unique_together': {('user', 'album')},
            },
        ),
        migrations.CreateModel(
            name='UserSubscribe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(auto_now_add=True, verbose_name='Дата начала')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Дата окончания')),
                ('subscribe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='kaudio.subscribe', verbose_name='Подписка')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscribes', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Подписка пользователя',
                'verbose_name_plural': 'Подписки пользователей',
                'unique_together': {('user', 'subscribe')},
            },
        ),
        migrations.CreateModel(
            name='UserTrack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveIntegerField(verbose_name='Позиция')),
                ('added_at', models.DateTimeField(auto_now_add=True, verbose_name='Добавлен')),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_tracks', to='kaudio.track', verbose_name='Трек')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_tracks', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Трек пользователя',
                'verbose_name_plural': 'Треки пользователей',
                'ordering': ['position'],
                'unique_together': {('user', 'track')},
            },
        ),
    ]
